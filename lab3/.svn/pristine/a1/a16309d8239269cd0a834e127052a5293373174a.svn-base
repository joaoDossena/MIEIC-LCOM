#include "kbc.h"

extern kbcID = 1;
extern int sysCounter = 0; //Initializing counter for function sys_inb() calls

int kbc_subscribe_int(uint8_t bit_no)
{
	if(bit_no == 0)
    	return 1; //Testing for null pointer

  	*bit_no = (*bit_no) | kbcID;

  	if(sys_irqsetpolicy(KEYBOARD_IRQ, IRQ_REENABLE | IRQ_EXCLUSIVE, &kbcID) != 0)
    	return 1;

  	return 0;
}

int kbc_unsubscribe_int() {
	if(sys_irqrmpolicy(&kbcID) != 0) //Unsubscribing timer interrupt while testing for error
    	return 1; //If error unsubscribing timer interrupt

  	return 0;
}

int sys_inb_count(port_t port, uint32_t *byte)
{
	int res = sys_inb(port, byte); //Tests for error
	sysCounter++; //Increments counter everytime the function is called

  	return res; //Returns 0 if successful, 1 otherwise
}

int util_sys_inb(port_t port, uint8_t *byte)
{
	uint32_t temp; //Temporary variable for calling sys_inb() function

  	if (sys_inb_count(port, &temp) != 0) //Tests for error
    	return 1; //Returns 1 if there's an error

  	(*byte) = (uint8_t) temp; //Cast

  	return 0; //Returns 0 upon success
}

